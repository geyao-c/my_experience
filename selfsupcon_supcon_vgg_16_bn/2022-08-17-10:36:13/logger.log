08/17 10:36:13 AM | args = Namespace(adapter_sparsity=None, arch=None, batch_size=128, beta=0, ci_dir='selfsupcon_supcon_vgg_16_bn', cutmix_prob=0, cutout=False, data_dir=None, dataset=None, epochs=300, finetune_arch='adapter_vgg_16_bn', finetune_data_dir='./data', finetune_dataset='cifar10', gpu='0', graf=True, label_smooth=0, learning_rate=0.01, length=16, lr_decay_step='50,100', lr_type='cos', mixup_alpha=0, momentum=0.9, n_holes=1, pretrain_dir='./result/vgg-selfsupcon-supcon_graf_pruned/2022-08-17-10:34:49/43.38_cifar100tocifar10_selfsupcon_supcon_vgg_16_bn_pruned_83', pretrained_arch='adapter_vgg_16_bn', pretrained_dataset='cifar100', result_dir='selfsupcon_supcon_vgg_16_bn/2022-08-17-10:36:13', sparsity='[0.30]*7+[0.75]*5', split='1', weight_decay=0.0005)
08/17 10:36:13 AM | args = Namespace(adapter_sparsity=None, arch=None, batch_size=128, beta=0, ci_dir='selfsupcon_supcon_vgg_16_bn', cutmix_prob=0, cutout=False, data_dir=None, dataset=None, epochs=300, finetune_arch='adapter_vgg_16_bn', finetune_data_dir='./data', finetune_dataset='cifar10', gpu='0', graf=True, label_smooth=0, learning_rate=0.01, length=16, lr_decay_step='50,100', lr_type='cos', mixup_alpha=0, momentum=0.9, n_holes=1, pretrain_dir='./result/vgg-selfsupcon-supcon_graf_pruned/2022-08-17-10:34:49/43.38_cifar100tocifar10_selfsupcon_supcon_vgg_16_bn_pruned_87', pretrained_arch='adapter_vgg_16_bn', pretrained_dataset='cifar100', result_dir='selfsupcon_supcon_vgg_16_bn/2022-08-17-10:36:13', sparsity='[0.45]*7+[0.78]*5', split='1', weight_decay=0.0005)
08/17 10:36:14 AM | the finetune dataset is cifar10
08/17 10:36:14 AM | ==> Building model..
08/17 10:36:14 AM | sparsity:[0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.75, 0.75, 0.75, 0.75, 0.75]
08/17 10:36:14 AM | the finetune dataset is cifar10
08/17 10:36:14 AM | ==> Building model..
08/17 10:36:14 AM | sparsity:[0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.78, 0.78, 0.78, 0.78, 0.78]
08/17 10:36:17 AM | VGG(
  (features): Sequential(
    (conv0): Conv2d(3, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm0): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (conv1): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(44, 89, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm3): BatchNorm2d(89, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (conv4): Conv2d(89, 89, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm4): BatchNorm2d(89, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU(inplace=True)
    (pool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv6): Conv2d(89, 179, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm6): BatchNorm2d(179, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu6): ReLU(inplace=True)
    (conv7): Conv2d(179, 179, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm7): BatchNorm2d(179, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu7): ReLU(inplace=True)
    (conv8): Conv2d(179, 179, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm8): BatchNorm2d(179, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu8): ReLU(inplace=True)
    (pool9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv10): Conv2d(179, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm10): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu10): ReLU(inplace=True)
    (conv11): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu11): ReLU(inplace=True)
    (conv12): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm12): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu12): ReLU(inplace=True)
    (pool13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv14): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm14): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu14): ReLU(inplace=True)
    (conv15): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
    (norm15): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu15): ReLU(inplace=True)
    (conv16): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1))
    (norm16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu16): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (linear1): Linear(in_features=512, out_features=512, bias=True)
    (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (linear2): Linear(in_features=512, out_features=10, bias=True)
  )
)
08/17 10:36:17 AM | input size is 32
08/17 10:36:17 AM | VGG(
  (features): Sequential(
    (conv0): Conv2d(3, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm0): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (conv1): Conv2d(35, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(35, 70, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm3): BatchNorm2d(70, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (conv4): Conv2d(70, 70, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm4): BatchNorm2d(70, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU(inplace=True)
    (pool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv6): Conv2d(70, 140, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm6): BatchNorm2d(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu6): ReLU(inplace=True)
    (conv7): Conv2d(140, 140, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm7): BatchNorm2d(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu7): ReLU(inplace=True)
    (conv8): Conv2d(140, 140, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm8): BatchNorm2d(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu8): ReLU(inplace=True)
    (pool9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv10): Conv2d(140, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm10): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu10): ReLU(inplace=True)
    (conv11): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm11): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu11): ReLU(inplace=True)
    (conv12): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm12): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu12): ReLU(inplace=True)
    (pool13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv14): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm14): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu14): ReLU(inplace=True)
    (conv15): Conv2d(112, 901, kernel_size=(1, 1), stride=(1, 1))
    (norm15): BatchNorm2d(901, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu15): ReLU(inplace=True)
    (conv16): Conv2d(901, 512, kernel_size=(1, 1), stride=(1, 1))
    (norm16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu16): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (linear1): Linear(in_features=512, out_features=512, bias=True)
    (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (linear2): Linear(in_features=512, out_features=10, bias=True)
  )
)
08/17 10:36:17 AM | input size is 32
08/17 10:36:18 AM | model flops is 104464640.0, params is 2426561.0
08/17 10:36:18 AM | model flops reduce ratio is 0.6654349309003613, params reduce ratio is 0.8324014170064254
08/17 10:36:18 AM | resuming from pretrain model
08/17 10:36:18 AM | model flops is 66692668.0, params is 1837435.0
08/17 10:36:18 AM | model flops reduce ratio is 0.786405839546671, params reduce ratio is 0.8730913822719484
08/17 10:36:18 AM | resuming from pretrain model
